package de.afrouper.config;

import org.apache.commons.io.IOUtils;
import org.yaml.snakeyaml.LoaderOptions;
import org.yaml.snakeyaml.Yaml;
import org.yaml.snakeyaml.constructor.Constructor;

import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Objects;

public class ConfigurationParser {

    private final ScannerConfiguration scannerConfiguration;

    public ConfigurationParser() {
        this((String) null);
    }

    public ConfigurationParser(String path) {
        scannerConfiguration = parse(path);
    }

    ConfigurationParser(InputStream inputStream){
        scannerConfiguration = parse(inputStream);
    }

    public ScannerConfiguration getScannerConfiguration() {
        return scannerConfiguration;
    }

    private ScannerConfiguration parse(String path) {
        InputStream inputStream = null;
        try {
            if(Objects.isNull(path) || path.isEmpty()) {
                inputStream = getClass().getResourceAsStream("/default-cve-searches.yaml");
            }
            else {
                inputStream = Files.newInputStream(Paths.get(path));
            }
            return parse(inputStream);
        }
        catch (IOException e) {
            throw new IllegalArgumentException("Unable to get access to path '" + path + "'.", e);
        }
        finally {
            IOUtils.closeQuietly(inputStream);
        }
    }

    private ScannerConfiguration parse(InputStream inputStream) {
        Yaml yaml = new Yaml(new Constructor(ScannerConfiguration.class, new LoaderOptions()));
        ScannerConfiguration scannerConfiguration = yaml.load(inputStream);
        scannerConfiguration.getCoordinates().forEach(this::checkMandatory);
        return scannerConfiguration;
    }

    private void checkMandatory(Coordinate coordinate) {
        Objects.requireNonNull(coordinate, "Coordinate object cannot be null.");
        Objects.requireNonNull(coordinate.getGroupId(), "Property 'groupId' cannot be null.");
        Objects.requireNonNull(coordinate.getArtifactId(), "Property 'artifactId' cannot be null.");
    }
}
