package de.afrouper.config;

import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class ConfigurationParserTest {

    @Test
    public void parseDefault() {
        ConfigurationParser configurationParser = new ConfigurationParser();
        assertNotNull(configurationParser);
        assertEquals(2, configurationParser.getScannerConfiguration().getCoordinates().size());

        Coordinate coordinate = configurationParser.getScannerConfiguration().getCoordinates().get(0);
        assertEquals("org.apache.commons", coordinate.getGroupId());
        assertEquals("commons-text", coordinate.getArtifactId());
        assertEquals("1.10.0", coordinate.getVersionFixed());
        assertEquals("org/apache/commons/text/StringSubstitutor.class", coordinate.getClassReference());
        assertNull(coordinate.getVersionRegex());
        assertTrue(coordinate.getCve().contains("CVE-2022-42889"));

        coordinate = configurationParser.getScannerConfiguration().getCoordinates().get(1);
        assertEquals("org.apache.logging.log4j", coordinate.getGroupId());
        assertEquals("log4j-core", coordinate.getArtifactId());
        assertEquals("2.17.1", coordinate.getVersionFixed());
        assertEquals("/log4j/core/lookup/JndiLookup.class", coordinate.getClassReference());
        assertNull(coordinate.getVersionRegex());
        assertTrue(coordinate.getCve().contains("CVE-2021-44228"));
        assertTrue(coordinate.getCve().contains("CVE-2021-45105"));
        assertTrue(coordinate.getCve().contains("CVE-2021-45046"));
    }

    @Test
    public void mandatoryFields() {
        NullPointerException exception = assertThrows(NullPointerException.class, () -> new ConfigurationParser(getClass().getResourceAsStream("/wrong-cve-searches.yaml")));
        assertEquals("Property 'artifactId' cannot be null.", exception.getMessage());
    }

    @Test()
    public void exceptionTest() {
        assertThrows(IllegalArgumentException.class, () -> new ConfigurationParser("invalid.yaml"));
    }
}