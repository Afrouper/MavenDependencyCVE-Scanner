package de.afrouper.cve;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

public class Log4ShellTest {

    @Test
    public void test_CVE_2021_45105() throws Exception {
        CVE_Bundle cveBundle = CVE_MavenScanner.CVE_BUNDLE_MAP.get("CVE-2021-45105");

        MavenDependencyScanner scanner = new MavenDependencyScanner(new File(getTestFiles()), cveBundle.getFixedVersion(), cveBundle.getClazzToCheck());
        scanner.scan();
        Map<String, ScanResult> findings = scanner.getFindings();
        findings.forEach((key, scanResult) -> scanResult.isVulnerable().ifPresent(vulnerable -> {
            if (vulnerable) {
                System.out.println("[*] \uD83D\uDD25 " + scanResult.getMavenCoordinates() + " in " + key);
            }
        }));
        Assertions.assertEquals(15, findings.size());

        List<Map.Entry<String, ScanResult>> vulEntries = findings.entrySet().stream().filter(e -> e.getValue().isVulnerable().orElse(false)).collect(Collectors.toList());
        Assertions.assertEquals(9, vulEntries.size());
    }

    private String getTestFiles() {
        Path resourceDirectory = Paths.get("src", "test", "resources", "log4j2");
        return resourceDirectory.toFile().getAbsolutePath();
    }
}
